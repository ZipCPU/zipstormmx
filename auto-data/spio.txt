################################################################################
##
## Filename: 	spio.txt
##
## Project:	ZipSTORM-MX, an iCE40 ZipCPU demonstration project
##
## Purpose:	To describe how to interact with the special purpose device
##		controller (spio) for the Arty A-7 Board (SW, BTN, LEDs)
##
## Creator:	Dan Gisselquist, Ph.D.
##		Gisselquist Technology, LLC
##
################################################################################
##
## Copyright (C) 2019, Gisselquist Technology, LLC
##
## This program is free software (firmware): you can redistribute it and/or
## modify it under the terms of  the GNU General Public License as published
## by the Free Software Foundation, either version 3 of the License, or (at
## your option) any later version.
##
## This program is distributed in the hope that it will be useful, but WITHOUT
## ANY WARRANTY; without even the implied warranty of MERCHANTIBILITY or
## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
## for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program.  (It's in the $(ROOT)/doc directory.  Run make with no
## target there if the PDF file isn't present.)  If not, see
## <http://www.gnu.org/licenses/> for a copy.
##
## License:	GPL, v3, as defined and found on www.gnu.org,
##		http://www.gnu.org/licenses/gpl.html
##
##
################################################################################
##
##
@PREFIX=spio
@DEVID=SPIO
@NADDR=1
@SLAVE.TYPE=SINGLE
@SLAVE.BUS=wb
@ACCESS=@$(DEVID)_ACCESS
@INT.SPIO.WIRE=@$(PREFIX)_int
@INT.SPIO.PIC=buspic
@NLED=4
@NBTN=2
@TOP.PORTLIST=
		// SPIO interface
		io_btn, o_led
@TOP.IODECL=
	inout	wire	[1:0]	io_btn;
	output	wire	[1:0]	o_led;
@TOP.DEFNS=
	wire	[1:0]	i_btn;
	wire	[3:0]	w_led;
@TOP.INSERT=
	//
	// Special purpose I/O (LEDs and buttons)
	//
	// assign	io_btn[0] = (o_led[0] ? 1'b0 : 1'bz);
	// assign	io_btn[1] = (o_led[1] ? 1'b0 : 1'bz);
	//
	assign	o_led = ~w_led[3:2];

	SB_IO #(.PULLUP(1'b1), .PIN_TYPE(6'b1010_01))
	ledio0 (.PACKAGE_PIN(io_btn[0]),
		.OUTPUT_ENABLE(w_led[0]),
		.D_OUT_0(1'b0),
		.D_IN_0(i_btn[0]));

	SB_IO #(.PULLUP(1'b1), .PIN_TYPE(6'b1010_01))
	ledio1 (.PACKAGE_PIN(io_btn[1]),
		.OUTPUT_ENABLE(w_led[1]),
		.D_OUT_0(1'b0),
		.D_IN_0(i_btn[1]));

@TOP.MAIN=
		~i_btn, w_led
@MAIN.PORTLIST=
		// SPIO interface
		i_btn, o_led
@MAIN.IODECL=
	// @$(DEVID) interface
	input	wire	[@$(NBTN)-1:0]	i_btn;
	output	wire	[@$(NLED)-1:0]	o_led;
@MAIN.INSERT=
	spio #(.NBTN(@$(NBTN)), .NLEDS(@$(NLED))) @$(PREFIX)i(i_clk,
		wb_cyc, (wb_stb)&&(@$(PREFIX)_sel), wb_we, wb_data, wb_sel,
			@$(PREFIX)_ack, @$(PREFIX)_stall, @$(PREFIX)_data,
		i_btn, o_led, @$(PREFIX)_int);
@MAIN.ALT=
	assign	o_led = 0;
@REGS.N=1
@REGS.0= 0 R_@$(DEVID) @$(DEVID)
@BDEF.DEFN=
@BDEF.IONAME=_@$(PREFIX)
@BDEF.IOTYPE=unsigned
@BDEF.OSDEF= _BOARD_HAS_@$(DEVID)
@BDEF.OSVAL= static volatile @$(BDEF.IOTYPE) *const @$(BDEF.IONAME) = ((@$(BDEF.IOTYPE) *)@$REGBASE);
@RTL.MAKE.SUBD=.
@RTL.MAKE.GROUP=SPIO
@RTL.MAKE.FILES=spio.v debouncer.v
